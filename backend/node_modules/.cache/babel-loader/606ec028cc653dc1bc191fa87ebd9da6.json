{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/shadi/Desktop/PHASE-2/CODE-CHALLENGE/Bank-of-Flatiron-Challenge/backend/src/components/AddTransactionForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\n\nfunction AddTransactionForm() {\n  _s();\n\n  const [date, setDate] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [id, setId] = useState(\"\");\n\n  function handleSubmit() {\n    const newTransaction = {\n      id,\n      date,\n      description,\n      category,\n      amount\n    };\n    fetch(\"http://localhost:8001/transactions\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newTransaction)\n    }).then(() => {\n      console.log(\"it's working\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          value: date,\n          onChange: event => setDate(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\",\n          value: description,\n          onChange: event => setDescription(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\",\n          value: category,\n          onChange: event => setCategory(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\",\n          value: amount,\n          onChange: event => setAmount(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, setId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTransactionForm, \"oc+Ennq9lO9R03CWt5wT5AraRVk=\");\n\n_c = AddTransactionForm;\nexport default AddTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"sources":["/home/shadi/Desktop/PHASE-2/CODE-CHALLENGE/Bank-of-Flatiron-Challenge/backend/src/components/AddTransactionForm.js"],"names":["React","useState","AddTransactionForm","date","setDate","description","setDescription","category","setCategory","amount","setAmount","id","setId","handleSubmit","newTransaction","fetch","method","headers","body","JSON","stringify","then","console","log","event","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nfunction AddTransactionForm() {\n  const [date, setDate] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [amount, setAmount] = useState(\"\")\n  const [id, setId] = useState(\"\")\n\n  function handleSubmit(){\n    const newTransaction = {id,date, description, category, amount};\n\n    fetch (\"http://localhost:8001/transactions\",{\n          method:'POST',\n          headers: {\n            'Content-Type':'application/json'\n          },\n          body: JSON.stringify(newTransaction) \n        } ).then(() => {\n          console.log(\"it's working\")\n        })\n  }\n  \n  return (\n    <div className=\"ui segment\">\n      <form className=\"ui form\">\n        <div className=\"inline fields\" key={setId}>\n          <input type=\"date\" name=\"date\" value={date} onChange={(event) => setDate(event.target.value)}/>\n          <input type=\"text\" name=\"description\" placeholder=\"Description\" value={description} onChange={(event) => setDescription(event.target.value)} />\n          <input type=\"text\" name=\"category\" placeholder=\"Category\" value={category} onChange={(event) => setCategory(event.target.value)}/>\n          <input type=\"number\" name=\"amount\" placeholder=\"Amount\" step=\"0.01\" value={amount} onChange={(event) => setAmount(event.target.value)}/>\n        </div>\n        <button className=\"ui button\" type=\"submit\" onClick={handleSubmit}>\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;"]},"metadata":{},"sourceType":"module"}